import { useEffect, useState } from "react";

function FoodFilterComponent({ products }) {
  const [visibleProducts, setVisibleProducts] = useState(products);
  const [categoryFilter, setCategoryFilter] = useState([]);
  const [dietaryFilter, setDietaryFilter] = useState([]); // e.g., veg/non-veg
  const [sortOption, setSortOption] = useState("");

  // Handle category checkbox changes
  const handleCategoryChange = (e) => {
    const value = e.target.value;
    const checked = e.target.checked;

    if (checked) {
      setCategoryFilter((prev) => [...prev, value]);
    } else {
      setCategoryFilter((prev) => prev.filter((item) => item !== value));
    }
  };

  // Handle dietary checkbox changes
  const handleDietaryChange = (e) => {
    const value = e.target.value;
    const checked = e.target.checked;

    if (checked) {
      setDietaryFilter((prev) => [...prev, value]);
    } else {
      setDietaryFilter((prev) => prev.filter((item) => item !== value));
    }
  };

  // Handle sort change
  const handleSortChange = (e) => {
    const value = e.target.value;
    setSortOption(value);
  };

  // Filter + Sort Products
  useEffect(() => {
    let filtered = [...products];

    // Apply filters
    if (categoryFilter.length > 0) {
      filtered = filtered.filter((product) =>
        categoryFilter.includes(product.category)
      );
    }

    if (dietaryFilter.length > 0) {
      filtered = filtered.filter((product) =>
        dietaryFilter.includes(product.dietary) // Example: 'veg', 'non-veg'
      );
    }

    // Apply sorting
    if (sortOption === "low-price") {
      filtered.sort((a, b) => a.price - b.price);
    } else if (sortOption === "high-price") {
      filtered.sort((a, b) => b.price - a.price);
    } else if (sortOption === "discount") {
      filtered.sort((a, b) => b.discount - a.discount);
    }

    setVisibleProducts(filtered);
  }, [products, categoryFilter, dietaryFilter, sortOption]);

  return (
    <div>
      <h3>Filter Menu</h3>

      {/* Category Filter */}
      <label><input type="checkbox" value="pizza" onChange={handleCategoryChange} /> Pizza</label>
      <label><input type="checkbox" value="burger" onChange={handleCategoryChange} /> Burger</label>

      {/* Dietary Filter */}
      <label><input type="checkbox" value="veg" onChange={handleDietaryChange} /> Veg</label>
      <label><input type="checkbox" value="non-veg" onChange={handleDietaryChange} /> Non-Veg</label>

      {/* Sort Options */}
      <select onChange={handleSortChange}>
        <option value="">Sort By</option>
        <option value="low-price">Price: Low to High</option>
        <option value="high-price">Price: High to Low</option>
        <option value="discount">Best Discount</option>
      </select>

      {/* Products */}
      <h3>Available Items</h3>
      <ul>
        {visibleProducts.map((item) => (
          <li key={item.id}>
            {item.name} - â‚¹{item.price} - {item.category} - {item.dietary}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default FoodFilterComponent;
